drop table account;
DROP TABLE ACCOUNTANT;
DROP TABLE BUSINESS_LOAN;
DROP TABLE CARD;
DROP TABLE CREDIT_RISK_ASSESSMENT;
DROP TABLE CURRENT_ACCOUNT;
DROP TABLE CUSTOMER;
DROP TABLE CUSTOMER_GROUP;
DROP TABLE EMPLOYEE;
DROP TABLE FIXED_DEPOSIT_ACCOUNT;
DROP TABLE GROUP_ACCOUNT;
DROP TABLE GROUP_SAVINGS_ACCOUNT;
DROP TABLE IT_STAFF;
DROP TABLE LOAN;
DROP TABLE LOAN_APPLICATION;
DROP TABLE LOAN_REPAYMENT;
DROP TABLE PERSONAL_LOAN;
DROP TABLE SAVINGS_ACCOUNT;
DROP TABLE STUDENT_LOAN;
DROP TABLE TELLER;
DROP TABLE TRANSACTION;


-- ACCOUNT TABLE*
CREATE TABLE ACCOUNT (
    ACCOUNT_ID INT PRIMARY KEY,
    CUSTOMER_ID INT,
    ACCOUNT_NUMBER VARCHAR(255),
    BALANCE DECIMAL(10, 2),
    OPEN_DATE DATE,
    ACCOUNT_TYPE VARCHAR(50),
    STATUS VARCHAR(20),
    MONTHLY_FEE DECIMAL(10, 2)
   -- FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) 
);


-- SAVINGS_ACCOUNT table (subtype of ACCOUNT) *
CREATE TABLE SAVINGS_ACCOUNT (
    ACCOUNT_ID VARCHAR(20) PRIMARY KEY,
    INTEREST_RATE DECIMAL(5, 2) NOT NULL,
    WITHDRAWAL_LIMIT INT,
    SAVINGS_ACC_TYPE VARCHAR(20) NOT NULL,
    FLAG CHAR(1) DEFAULT 'S'
   -- FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);

-- CURRENT_ACCOUNT table (subtype of ACCOUNT)*
CREATE TABLE CURRENT_ACCOUNT (
    ACCOUNT_ID VARCHAR(20) PRIMARY KEY,
    OVERDRAFT_LIMIT DECIMAL(15, 2) NOT NULL, --DEFAULT 0.00,
    FLAG CHAR(1) DEFAULT 'C'
    --FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);

-- FIXED_DEPOSIT_ACCOUNT table (subtype of ACCOUNT)*
CREATE TABLE FIXED_DEPOSIT_ACCOUNT (
    ACCOUNT_ID VARCHAR(20) PRIMARY KEY,
    DEPOSIT_TERM INT NOT NULL, -- in months
    INITIAL_DEPOSIT DECIMAL(15, 2) NOT NULL,
    EARLYWITHDRAWAL_PENALTY DECIMAL(5, 2) NOT NULL,
    MATURITY_DATE DATE NOT NULL,
    FLAG CHAR(1) DEFAULT 'F'
    --FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);

-- GROUP_SAVINGS_ACCOUNT table (subtype of SAVINGS_ACCOUNT)*
CREATE TABLE GROUP_SAVINGS_ACCOUNT (
    ACCOUNT_ID VARCHAR(20) PRIMARY KEY,
    CONTRIBUTION_FREQUENCY VARCHAR(10) NOT NULL, -- e.g., 'MONTHLY', 'WEEKLY'
    CONTRIBUTION_AMOUNT DECIMAL(15, 2) NOT NULL,
    FLAG CHAR(1) DEFAULT 'G'
    --FOREIGN KEY (ACCOUNT_ID) REFERENCES SAVINGS_ACCOUNT(ACCOUNT_ID)
);

-- CUSTOMER table*
CREATE TABLE CUSTOMER (
    CUSTOMER_ID INTEGER PRIMARY KEY NOT NULL,
    CUSTOMER_NAME VARCHAR2(100) NOT NULL,
    CUSTOMER_LNAME VARCHAR2(100),
    CUSTOMER_CELLNUM VARCHAR2(15),
    CUSTOMER_ADDRESS VARCHAR(100),
    CUSTOMER_DATE_OF_BIRTH DATE,
    CUSTOMER_EMAIL VARCHAR(100),
    ACTIVE_STATUS CHAR(1)
);

-- GROUP table*
CREATE TABLE GROUP_ACCOUNT (
    GROUP_ID VARCHAR(20) PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    JOINING_DATE DATE NOT NULL,
    LEADER_NAME VARCHAR(100)
);

-- CUSTOMER_GROUP ( table for CUSTOMER and GROUP)*
CREATE TABLE CUSTOMER_GROUP (
    GROUP_ID VARCHAR(20),
    CUSTOMER_ID VARCHAR(20),
    MEMBER_ROLE VARCHAR(50)
  --  PRIMARY KEY (GROUP_ID, CUSTOMER_ID),
   -- FOREIGN KEY (GROUP_ID) REFERENCES GROUP_ACCOUNT(GROUP_ID),
   -- FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
);
 
-- CARD table*
CREATE TABLE CARD (
    CARD_ID VARCHAR(20) PRIMARY KEY,
    ACCOUNT_ID VARCHAR(20) NOT NULL,
    CARD_NUMBER VARCHAR(16) NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    ISSUE_DATE DATE NOT NULL,
    CARD_PIN VARCHAR(4) NOT NULL,
    CVV_EVC VARCHAR(3) NOT NULL
  --  FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);

-- LOAN_APPLICATION table*
CREATE TABLE LOAN_APPLICATION (
    APPLICATION_ID VARCHAR(20) PRIMARY KEY,
    CUSTOMER_ID VARCHAR(20) NOT NULL,
    LOAN_TYPE VARCHAR(50) NOT NULL,
    PURPOSE_OF_LOAN VARCHAR(100) NOT NULL,
    APPLICATION_STATUS VARCHAR(1) NOT NULL
);
	
-- EMPLOYEE table (base table)*
CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID VARCHAR(20) PRIMARY KEY,
    EMP_FNAME VARCHAR(50) NOT NULL,
    EMP_LNAME VARCHAR(50) NOT NULL,
    EMP_EMAIL VARCHAR(100) UNIQUE,
    EMP_CELLNUM VARCHAR(15),
    EMP_ADDRESS VARCHAR(50),
    EMP_DATE_OF_HIRE DATE NOT NULL,
    EMP_TYPE VARCHAR(20) NOT NULL 
);

-- EMP_TYPE subtype tables*
CREATE TABLE ACCOUNTANT (
    EMPLOYEE_ID VARCHAR(20) PRIMARY KEY,
    CERTIFICATION VARCHAR(100),
    YEARS_OF_EXPERIENCE INT,
    SPECIALIZATION VARCHAR(100),
    FLAG CHAR(1) DEFAULT 'A'
    --FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
);

CREATE TABLE IT_STAFF (
    EMPLOYEE_ID VARCHAR(20) PRIMARY KEY,
    SPECIALIZATION VARCHAR(100),
    PROJECTS_ASSIGNED INT,
    SYSTEM_ACCESS_LEVEL VARCHAR(50),
    FLAG CHAR(1) DEFAULT 'I'
   -- FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
);

CREATE TABLE TELLER (
    EMPLOYEE_ID VARCHAR(20) PRIMARY KEY,
    CASH_HANDLING_LIMIT DECIMAL(15, 2),
    CUSTOMER_RATING DECIMAL(3, 2),
    FLAG CHAR(1) DEFAULT 'T'
   -- FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
);

-- Loan subtype tables (extending the previous LOAN table)
CREATE TABLE STUDENT_LOAN (
    LOAN_ID VARCHAR(20) PRIMARY KEY,
    REGISTRATION_STATUS VARCHAR(20) NOT NULL,
    ACADEMIC_YEAR VARCHAR(9) NOT NULL, -- e.g., "2023-2024"
    INSTITUTION_NAME VARCHAR(100) NOT NULL,
    STUDENT_NUM VARCHAR(20) NOT NULL,
    ACADEMIC_AVERAGE DECIMAL(4, 2),
    SUBJECT_NAME VARCHAR(100),
    FLAG CHAR(1) DEFAULT 'B'
   -- FOREIGN KEY (LOAN_ID) REFERENCES LOAN(LOAN_ID)
);

CREATE TABLE BUSINESS_LOAN (
    LOAN_ID VARCHAR(20) PRIMARY KEY,
    BUSINESS_NAME VARCHAR(100) NOT NULL,
    BUSINESS_REGISTRATION_NUM VARCHAR(30) NOT NULL,
    BUSINESS_TYPE VARCHAR(50) NOT NULL,
    FLAG CHAR(1) DEFAULT 'P'
   -- FOREIGN KEY (LOAN_ID) REFERENCES LOAN(LOAN_ID)
);

CREATE TABLE PERSONAL_LOAN (
    LOAN_ID VARCHAR(20) PRIMARY KEY,
    EMPLOYMENT_STATUS VARCHAR(20) NOT NULL,
    MONTHLY_INCOME DECIMAL(15, 2),
    LOAN_PURPOSE VARCHAR2(50),
    FLAG CHAR(1) DEFAULT 'P'
   -- FOREIGN KEY (LOAN_ID) REFERENCES LOAN(LOAN_ID)
);

-- CREDIT RISK ASSESSMENT table*
CREATE TABLE CREDIT_RISK_ASSESSMENT (
    ASSESSMENT_ID VARCHAR(20) PRIMARY KEY,
    CUSTOMER_ID VARCHAR(20) NOT NULL,
    APPLICATION_ID VARCHAR(20) NOT NULL,
    LASTASSESSMENT_DATE DATE NOT NULL,
    CREDIT_SCORE INT,
    RISK_LEVEL VARCHAR(20)
    --FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
    --FOREIGN KEY (APPLICATION_ID) REFERENCES LOAN_APPLICATION(APPLICATION_ID)
);

-- TRANSACTION table*
CREATE TABLE TRANSACTION (
    TRANSACTION_ID INTEGER NOT NULL PRIMARY KEY,
    ACCOUNT_ID VARCHAR(20) NOT NULL,
    TRANSACTION_TIME DATE DEFAULT SYSDATE NOT NULL,
    TRANSACTION_TYPE VARCHAR(20) NOT NULL,
    TRANSACTION_AMOUNT DECIMAL(15, 2) NOT NULL,
    TRANSACTION_DATE DATE NOT NULL
    --FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);

-- LOAN_REPAYMENT table*
CREATE TABLE LOAN_REPAYMENT (
    REPAYMENT_ID VARCHAR(20) NOT NULL PRIMARY KEY,
    TRANSACTION_ID INT NOT NULL,
    LOAN_ID VARCHAR(20) NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    PAYMENT_AMOUNT DECIMAL(15, 2) NOT NULL,
    PAYMENT_METHOD VARCHAR(20) NOT NULL
    -- FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTION(TRANSACTION_ID),
    -- FOREIGN KEY (LOAN_ID) REFERENCES LOAN(LOAN_ID)
);

-- LOAN table*
CREATE TABLE LOAN (
    LOAN_ID VARCHAR(20) NOT NULL,
    APPLICATION_ID VARCHAR(20) NOT NULL,
    CUSTOMER_ID VARCHAR(20) NOT NULL,
    INITIAL_LOAN_AMOUNT DECIMAL(15, 2) NOT NULL,
    INTEREST_RATE DECIMAL(5, 2) NOT NULL,
    LOAN_TERM INT NOT NULL,
    DISBURSEMENT_DATE DATE,
    REPAYMENT_FREQUENCY VARCHAR(20),
    OUTSTANDING_AMOUNT DECIMAL(15, 2) NOT NULL 
   -- PRIMARY KEY (LOAN_ID, APPLICATION_ID, CUSTOMER_ID),
   -- FOREIGN KEY (APPLICATION_ID) REFERENCES LOAN_APPLICATION(APPLICATION_ID),
    --FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
);


alter table account
add constraint account_acc_pk
foreign key (customer_id)
references customer (customer_id);